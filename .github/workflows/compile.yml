name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake bison flex
      - name: Configure
        run: cmake -B build -S .
      - name: Build
        run: cmake --build build --config Release
      - name: Strip
        run: strip build/noct
      - name: Rename binary
        run: mv build/noct build/noct-linux
      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: noct-linux
          path: build/noct-linux

  build-windows-mingw:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y mingw-w64 cmake bison flex
      - name: Configure
        run: cmake -B build -S . -DCMAKE_TOOLCHAIN_FILE=cmake/mingw-x86_64-toolchain.cmake
      - name: Build
        run: cmake --build build --config Release
      - name: Strip
        run: x86_64-w64-mingw32-strip build/noct.exe
      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: noct.exe
          path: build/noct.exe

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up dependencies
        run: |
          brew update
          brew install cmake bison flex
          echo "/opt/homebrew/opt/bison/bin" >> $GITHUB_PATH
          echo "/opt/homebrew/opt/flex/bin" >> $GITHUB_PATH
      - name: Verify versions
        run: |
          which bison
          bison --version
          which flex
          flex --version
      - name: Configure
        run: cmake -B build -S .
      - name: Build
        run: cmake --build build --config Release
      - name: Rename binary
        run: mv build/noct build/noct-macos
      - name: Upload macOS binary
        uses: actions/upload-artifact@v4
        with:
          name: noct-macos
          path: build/noct-macos

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs:
      - build-linux
      - build-windows-mingw
      - build-macos
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: nightly-${{ github.run_number }}
          name: Nightly Build ${{ github.run_number }}
          files: artifacts/**/*
          body: |
            This is an automated nightly build.

            Includes:
            - Linux
            - Windows (MinGW)
            - macOS
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
